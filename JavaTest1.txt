import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

class HomePanel extends JPanel {
	ImageIcon icon;
	Image img;
	public HomePanel() {
		icon=new ImageIcon(getClass().getResource("images/c.jpg"));
		img=icon.getImage();
	}
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		g.drawImage(img, 0, 0,this.getWidth(), this.getHeight(), this);
	}
 
}

class MyWin extends JFrame{
	ArrayList<Student> student = new ArrayList<Student>();
	JTabbedPane p;
	Box baseBox,boxV1,boxV2;
	Box findBox,boxF1,boxF2;
	Box sortBox,boxS1,boxS2;
	Object tab[][] = new Object[student.size()][3];
	String name[] = {"排名","学号","成绩"};
	JTable table = new JTable(tab, name);
	JScrollPane JSP= new JScrollPane(table);
	JButton affirmButton = new JButton("确认");
	JButton findButton = new JButton("查询");
	JButton orderButton = new JButton("排序");
	JTextField inputNum = new JTextField(10);
	JTextField inputGrade = new JTextField(10);
	JTextField findNum = new JTextField(10);
	JTextArea printFind = new JTextArea();
	JPanel a = new HomePanel();
	JPanel b = new HomePanel();
	JPanel c = new HomePanel();
	public MyWin() {
		setTitle("Java实验一成绩录入查询排序");
		setBounds(100,100,800,500);
		setVisible(true);
		
		p = new JTabbedPane(JTabbedPane.LEFT);
		p.add("输入成绩",a);
		p.add("查询成绩",b);
		p.add("成绩排序",c);
		a.setBackground(Color.LIGHT_GRAY);
		b.setBackground(Color.LIGHT_GRAY);
		c.setBackground(Color.LIGHT_GRAY);
		inputGUI();		
		a.add(baseBox);	
		findGUI();
		b.add(findBox);
		sortGUI();
		c.add(sortBox);
		
		saveAction save = new saveAction(inputNum, inputGrade);
		affirmButton.addActionListener(save);
		findAction find = new findAction(findNum);
		findButton.addActionListener(find);
		sortAction sort = new sortAction();
		orderButton.addActionListener(sort);
		
		p.validate();
		add(p, BorderLayout.CENTER);
		validate();
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}
	
	void inputGUI() {
		boxV1 = Box.createVerticalBox();
		boxV1.add(Box.createVerticalStrut(100));
		JLabel lab1 = new JLabel("请输入学号：");
		lab1.setFont(new Font("楷体", Font.BOLD, 18));
		JLabel lab2 = new JLabel("请输入成绩：");
		lab2.setFont(new Font("楷体", Font.BOLD, 18));
        boxV1.add(lab1);
        boxV1.add(Box.createVerticalStrut(8));
        boxV1.add(lab2);
        boxV1.add(Box.createVerticalStrut(30));
        boxV1.add(new JLabel("  "));
        boxV1.add(Box.createVerticalStrut(30));
        boxV2 = Box.createVerticalBox();
        boxV2.add(Box.createVerticalStrut(100));
        boxV2.add(inputNum);
        boxV2.add(Box.createVerticalStrut(8));
        boxV2.add(inputGrade);
        boxV2.add(Box.createVerticalStrut(20));
        boxV2.add(affirmButton);
        boxV2.add(Box.createVerticalStrut(30));
        baseBox = Box.createHorizontalBox();
        baseBox.add(boxV1);
        baseBox.add(Box.createHorizontalStrut(10));
        baseBox.add(boxV2);
        baseBox.add(Box.createHorizontalStrut(10));
	}
	
	void findGUI() {
		boxF1 = Box.createVerticalBox();
		boxF1.add(Box.createVerticalStrut(100));
		JLabel lab3 = new JLabel("请输入查询学号：");
		lab3.setFont(new Font("楷体", Font.BOLD, 18));
		boxF1.add(lab3);
		boxF1.add(Box.createVerticalStrut(8));
		boxF1.add(new JLabel("               "));
		boxF1.add(new JLabel("               "));
		boxF1.add(new JLabel("               "));
		boxF1.add(Box.createVerticalStrut(30));
		printFind.setBackground(Color.WHITE);
		printFind.setFont(new Font("楷体", Font.BOLD, 24));
		printFind.setText("学号：\n成绩：");
		boxF1.add(printFind);
		boxF2 = Box.createVerticalBox();
		boxF2.add(Box.createVerticalStrut(100));
		boxF2.add(findNum);
		boxF2.add(Box.createVerticalStrut(30));
		boxF2.add(findButton);
		boxF2.add(Box.createVerticalStrut(50));
		
		findBox = Box.createHorizontalBox();
		findBox.add(boxF1);
		findBox.add(Box.createHorizontalStrut(10));
		findBox.add(boxF2);
		baseBox.add(Box.createHorizontalStrut(10));
	}
	
	void sortGUI() {
		sortBox = Box.createVerticalBox();
		sortBox.add(orderButton);
		sortBox.add(Box.createVerticalStrut(50));
	}
	
	class saveAction implements ActionListener{
		JTextField inputNum, inputGrade;
		public saveAction(JTextField inputNum, JTextField inputGrade) {
			this.inputNum = inputNum;
			this.inputGrade = inputGrade;
		}
		public void actionPerformed(ActionEvent e) {
			String num, grade;
			num = inputNum.getText().toString();
			grade = inputGrade.getText().toString();
			int gradeNum = Integer.parseInt(grade);
			Student stu = new Student(num, gradeNum);
			student.add(stu);
			System.out.println(stu.num + " " +stu.grade);
		}
	}
	
	class findAction implements ActionListener{
		JTextField findNum;
		public findAction(JTextField findNum) {
			this.findNum = findNum;
		}
		public void actionPerformed(ActionEvent e) {
			String num;
			num = findNum.getText().toString();
			
			for(int i = 0; i < student.size(); i++) {
				if(student.get(i).num.equals(num)) {
					System.out.println(student.get(i).grade);
					String printText = "学号：" + student.get(i).num + "\n" + "成绩：" + student.get(i).grade;
					printFind.setText(printText);
					break;
				}
				if(i == student.size()-1 && !student.get(i).num.equals(num)) {
					printFind.setText("所查学生\n不存在！");
					break;
				}
			}
		}
	}
	
	class sortAction implements ActionListener{
		public sortAction() {}

		public void actionPerformed(ActionEvent e) {
			int ranking = 1;
			Collections.sort(student,comparator);
			tab = new Object[student.size()][3];
			for(int i = 0; i < student.size(); i++) {
				for(int j = 0; j < 3; j++) {
					if(j == 0) {
						tab[i][0] = ranking;
						ranking++;
					}
					if(j == 1){
						tab[i][1] = student.get(i).num;
					}else {
						tab[i][2] = student.get(i).grade;
					}
				}
			}
			c.removeAll();
			table = new JTable(tab, name);
			JSP= new JScrollPane(table); 
			sortBox = Box.createVerticalBox();
			sortBox.add(orderButton);
			sortBox.add(Box.createVerticalStrut(50));
			sortBox.add(JSP);
			c.add(sortBox);
		}
	}
	
	Comparator<Student> comparator = new Comparator<Student>(){
	     public int compare(Student s1, Student s2) {
	      if(s1.grade!=s2.grade){
	       return s2.grade-s1.grade;
	      }
		return 0;
	     }
	    };
}

class Student{
	String num;
	int grade;
	public Student(String num, int grade){
		this.num = num;
		this.grade = grade;
	}
	double getGrade() {
		return grade;
	}
}

public class test1 {
	public static void main(String[] args) {
		try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }catch(Exception e) {
        	System.out.println(e);
        }

		new MyWin();
	}
}
